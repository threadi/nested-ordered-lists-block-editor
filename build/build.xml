<?xml version="1.0" encoding="UTF-8"?>
<project name="nested-ordered-lists-for-block-editor" basedir="." default="help">

	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="libs/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>

	<!-- Include config file containing  -->
	<loadproperties srcFile="build.properties" />

	<!-- Sets variables which can later be used. -->
	<property name="src.dir" location="../" />
	<property name="build.dir" location="../releases" />
	<property name="log.dir" location="./" />

	<!-- check for necessary vars -->
	<fail unless="plugin.slug" />
	<fail unless="plugin.version" />
	<fail unless="npm.path" />
	<fail unless="list.max_level" />
	<fail message="Do not run as root!">
		<condition>
			<equals arg1="root" arg2="${user.name}"/>
		</condition>
	</fail>

	<!-- install npm -->
	<target name="npm-install">
		<delete file="${log.dir}/npm-install.txt"/>
		<exec dir="${src.dir}" failonerror="true" executable="${npm.path}" output="${log.dir}/npm-install.txt">
			<arg line="i"/>
		</exec>
	</target>

	<!-- build the Blocks via npm -->
	<target name="npm-build" depends="npm-install">
		<delete file="${log.dir}/npm-build.txt"/>
		<exec dir="${src.dir}" failonerror="true" executable="${npm.path}" output="${log.dir}/npm-build.txt">
			<arg line="run build"/>
		</exec>
	</target>

	<!-- generate json-translations -->
	<target name="json-translations" depends="npm-build">
		<exec dir="${src.dir}" failonerror="true" executable="wp">
			<arg line="i18n make-json languages --no-purge"/>
		</exec>
	</target>

	<!-- set version number in plugin-file for the release -->
	<target name="setVersionNumber">
		<delete file="${build.dir}/${plugin.slug}-release.php"/>
		<copy file="${src.dir}/${plugin.slug}.php" tofile="${src.dir}/${plugin.slug}-release.php"/>
		<replace file="${src.dir}/${plugin.slug}-release.php">
			<replacefilter token="@@VersionNumber@@" value="${plugin.version}" />
		</replace>

		<delete file="${build.dir}/readme-release.php"/>
		<copy file="${src.dir}/readme.txt" tofile="${src.dir}/readme-release.txt"/>
		<replace file="${src.dir}/readme-release.txt">
			<replacefilter token="@@VersionNumber@@" value="${plugin.version}" />
		</replace>
	</target>

	<!-- generate the CSS needed for this plugin with given max level -->
	<target name="generate-css" description="generated the css-file">
		<delete file="${src.dir}/css/style.css"/>
		<exec dir="${src.dir}/css/" failonerror="true" executable="/usr/bin/php" output="${src.dir}/css/style.css">
			<arg line="style.php ${list.max_level}"/>
		</exec>
	</target>

	<!-- install composer -->
	<target name="composer-install">
		<delete file="${log.dir}/composer-install.txt"/>
		<delete file="${log.dir}/composer-update.txt"/>
		<exec dir="${src.dir}" failonerror="true" executable="${composer.path}" output="${log.dir}/composer-install.txt">
			<arg line="install"/>
		</exec>
		<exec dir="${src.dir}" failonerror="true" executable="${composer.path}" output="${log.dir}/composer-update.txt">
			<arg line="update"/>
		</exec>
	</target>

	<!-- check WCS compatibility -->
	<target name="check-wcs" depends="composer-install">
		<exec dir="${src.dir}" failonerror="false" executable="vendor/bin/phpcbf">
			<arg line="--extensions=php --ignore=*/attributes/*,*/example/*,*/css/*,*/vendor/*,*/node_modules/*,*/svn/* --standard=ruleset.xml ."/>
		</exec>
		<exec dir="${src.dir}" failonerror="true" executable="vendor/bin/phpcs">
			<arg line="--extensions=php --ignore=*/attributes/*,*/example/*,*/css/*,*/vendor/*,*/node_modules/*,*/svn/* --standard=ruleset.xml ."/>
		</exec>
	</target>

	<!-- Minify CSS-files -->
	<target name="minify-css" depends="composer-install">
		<for param="file">
			<path>
				<fileset dir="${src.dir}/css" includes="*.css" excludes="*.min.css"/>
			</path>
			<sequential>
				<exec dir="${src.dir}/css/" failonerror="false" executable="/usr/bin/php">
					<arg line="${src.dir}/css/minify_css.php @{file}"/>
				</exec>
			</sequential>
		</for>
	</target>

	<!-- init project -->
	<target name="init" description="initialize the project" depends="npm-build,generate-css,json-translations" />

	<!-- create release-zip -->
	<target name="build" description="builds a new release" depends="init,check-wcs,minify-css,setVersionNumber">
		<delete file="${build.dir}/${plugin.slug}_${plugin.version}.zip"/>
		<zip destfile="${build.dir}/${plugin.slug}_${plugin.version}.zip">
			<zipfileset dir="${src.dir}/admin" prefix="${plugin.slug}/admin" />
			<zipfileset dir="${src.dir}/attributes" prefix="${plugin.slug}/attributes" />
			<zipfileset dir="${src.dir}/admin" includes="index.php" prefix="${plugin.slug}/attributes" />
			<zipfileset dir="${src.dir}/css" includes="index.php,style.css" prefix="${plugin.slug}/css" />
			<zipfileset dir="${src.dir}" includes="uninstall.php,block.json" prefix="${plugin.slug}" />
			<zipfileset dir="${src.dir}" includes="readme-release.txt" fullpath="${plugin.slug}/readme.txt" />
			<zipfileset dir="${src.dir}" includes="${plugin.slug}-release.php" fullpath="${plugin.slug}/${plugin.slug}.php" />
		</zip>
		<delete file="${src.dir}/${plugin.slug}-release.php"/>
		<delete file="${src.dir}/readme-release.txt"/>
	</target>

	<target name="help">
		<java classname="org.apache.tools.ant.Main">
			<arg value="-projecthelp" />
			<arg value="-buildfile" />
			<arg value="build.xml" />
		</java>
	</target>

</project>
